version: '3.7'

services:
  pstg:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: elk
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
  mongo:
    container_name: mongo
    hostname: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
  metadata:
    image: goopnigoop/metadata:latest
    build:
      context: ./metadata
      dockerfile: Dockerfile
    ports:
#      - '8084-8090:8080'
      - '8084:8080'
      - '5011:5005'
    environment:
      SPRING_DATA_MONGODB_HOST: mongo
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://eureka:8761/eureka/'
      EUREKA_CLIENT_FETCH_REGISTRY: 'true'
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: 'true'
    depends_on:
      - mongo
      - pstg

  file:
    image: goopnigoop/file:latest
    container_name: file
    build:
      context: ./file
      dockerfile: Dockerfile
    ports:
      - '8082:8080'
      - '5010:5005'
    environment:
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://eureka:8761/eureka/'
      EUREKA_CLIENT_FETCH_REGISTRY: 'true'
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: 'true'
    depends_on:
      - metadata
      - pstg

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - metadata

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - prometheus

  eureka:
    image: goopnigoop/eureka:latest
    container_name: eureka
    build:
      context: ./eureka
      dockerfile: Dockerfile
    environment:
      EUREKA_CLIENT_FETCH_REGISTRY: 'false'
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: 'false'
    ports:
      - "8761:8761"

  zuul:
    image: goopnigoop/zuul:latest
    container_name: zuul
    build:
      context: ./zuul
      dockerfile: Dockerfile
    ports:
      - "8766:8766"
      - '5008:5005'
    depends_on:
      - eureka
      - pstg
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://eureka:8761/eureka/'
      UREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_FETCH_REGISTRY: 'true'
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: 'true'

  auth:
    image: goopnigoop/auth:latest
    container_name: auth
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "9500:9500"
      - '5007:5005'
    depends_on:
      - eureka
      - pstg
    environment:
      DB_URL: pstg
      POSTGRES_DB: elk
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://eureka:8761/eureka/'
      UREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_FETCH_REGISTRY: 'true'
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: 'true'

networks:
  default:
    driver: bridge
